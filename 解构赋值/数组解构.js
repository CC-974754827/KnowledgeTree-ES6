/**
 * 数组解构的语法是在赋值数组的左侧使用了数组字面量；
 * 数组解构时，解构作用在数组内部的位置上，而不是作用在对象的具名属性上；
 * 在数组的解构中，解构的目标若为可遍历对象，皆可进行解构赋值；
 */
// 基本
let [a, b, c] = [1, 2, 3]; // a = 1  b = 2  c = 3

// 可嵌套
let [a, [[b], c]] = [1, [[2], 3]]; // a = 1  b = 2  c = 3

// 可忽略
let [a, , b] = [1, 2, 3];  // a = 1  b = 3

// 不完全解构
let [a = 1, b] = []; // a = 1  b = undefined

// 剩余运算符
let [a, ...b] = [1, 2, 3]; // a = 1  b = [2, 3]

// 字符串
let [a, b, c, d, e] = 'hello'; // a = 'h'  b = 'e'  c = 'l'  d = 'l'  e = 'o'

// 解构默认值
let [a = 2] = [undefined]; // a = 2

// 当解构模式有匹配结果，且匹配结果是undefined时，会触发默认值作为返回结果
let [a = 3, b = a] = []; // a = 3  b = 3
let [a = 3, b = a] = [1]; // a = 1  b = 1
let [a = 3, b = a] = [1, 2]; // a = 1  b = 2
